import { ioChat } from "@/server";
import { Socket } from "socket.io";

export const chatSocket = (socket: Socket) => {
    console.log("üü¢ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", socket.id);

    // –≤—Ö–æ–¥ –≤ –∫–æ–º–Ω–∞—Ç—É
    socket.on("join-chat", (chatId: string) => {
        socket.join(`chat_${chatId}`);
        console.log(`üì• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.id} –≤–æ—à—ë–ª –≤ chat_${chatId}`);
    });

    // –≤—ã—Ö–æ–¥ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã
    socket.on("leave-chat", (chatId: string) => {
        socket.leave(`chat_${chatId}`);
        console.log(`üì§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.id} –ø–æ–∫–∏–Ω—É–ª chat_${chatId}`);
    });

    // ‚úèÔ∏è –Ω–∞—á–∞–ª–æ –Ω–∞–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    socket.on("typing-start", (chatId: string, username?: string) => {
        console.log(`‚å®Ô∏è ${username ?? socket.id} –ø–µ—á–∞—Ç–∞–µ—Ç –≤ chat_${chatId}`);
        socket.to(`chat_${chatId}`).emit("user-typing-start", {
            chatId,
            username,
            socketId: socket.id,
        });
    });

    // üõë –∫–æ–Ω–µ—Ü –Ω–∞–±–æ—Ä–∞
    socket.on("typing-stop", (chatId: string, username?: string) => {
        console.log(`üõë ${username ?? socket.id} –ø–µ—Ä–µ—Å—Ç–∞–ª –ø–µ—á–∞—Ç–∞—Ç—å –≤ chat_${chatId}`);
        socket.to(`chat_${chatId}`).emit("user-typing-stop", {
            chatId,
            username,
            socketId: socket.id,
        });
    });

    // –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
    socket.on("disconnect", () => {
        console.log(`üî¥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è: ${socket.id}`);
    });
};
