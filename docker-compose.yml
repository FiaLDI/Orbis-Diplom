services:
  backend:
    build: ./apps/backend
    container_name: orbis_backend
    restart: always
    env_file:
      - ./apps/backend/.env.prod
    ports:
      - "4000:4000"
    depends_on:
      - orbis_db
      - orbis_redis
    networks:
      - orbis_net

  cdn:
    build: ./apps/cdn
    container_name: orbis_cdn
    restart: always
    env_file:
      - ./apps/cdn/.env.prod
    ports:
      - "4005:4005"
    networks:
      - orbis_net

  frontend:
    build: ./apps/frontend
    container_name: orbis_frontend
    restart: always
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - orbis_net

  nginx:
    image: nginx:stable
    container_name: orbis_nginx
    restart: always
    depends_on:
      - frontend
      - backend
      - cdn
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./apps/frontend/dist:/var/www/orbis-frontend:ro
      - ./ssl:/etc/ssl/private:ro
    networks:
      - orbis_net

  # ===============================
  # üóÑ PostgreSQL
  # ===============================
  orbis_db:
    image: postgres:15
    container_name: orbis_db_container
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: orbis
      POSTGRES_USER: orbis
      POSTGRES_PASSWORD: orbis
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - orbis_net

  # ===============================
  # üíæ Redis
  # ===============================
  orbis_redis:
    image: redis:7-alpine
    container_name: orbis_redis_container
    restart: always
    command: ["redis-server", "--requirepass", "admin"]
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - orbis_net

# ===============================
# üîó –û–±—â–∏–µ —Å–µ—Ç–∏ –∏ —Ç–æ–º–∞
# ===============================
networks:
  orbis_net:

volumes:
  postgres_data:
  redis_data:
